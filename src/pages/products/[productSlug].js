import Head from 'next/head'
import Image from 'next/image'
import Script from 'next/script'
import {
  ApolloClient,
  InMemoryCache,
  gql
} from "@apollo/client"

import Header from '@components/Header'
import Container from '@components/Container'
import Button from '@components/Button'
import styles from '@styles/Home.module.scss'
// import products from '@data/products.json'

export default function Home({product}) {

  return (
    <div>
      <Head>
        <title>{product.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://app.snipcart.com" />
        <link rel="preconnect" href="https://cdn.snipcart.com" />
        <link rel="stylesheet" href="https://cdn.snipcart.com/themes/v3.3.0/default/snipcart.css" />
      </Head>

      <Header />
      <main>
        <Container>
          <h1>{product.title}</h1>

        </Container>
      </main>

      <footer className={styles.footer}>
        &copy; My Store, {new Date().getFullYear()}
      </footer>
      <Script src="https://cdn.snipcart.com/themes/v3.3.0/default/snipcart.js" />
      <div hidden id="snipcart" data-api-key={process.env.NEXT_PUBLIC_SNIPCART_API_KEY}></div>
    </div>
  )
}

export async function getStaticProps({params}){

  const { productSlug } = params

  const client = new ApolloClient({
    uri: 'https://guatetiendas.com/graphql',
    cache: new InMemoryCache()
  });

  const response = await client.query({
    query: gql`
    query ProductBySlug($slug: ID!) {
      product(id: $slug, idType: SLUG) {
        title
        product {
          productId
          productPrice
        }
        content
        featuredImage {
          node {
            altText
            sourceUrl
            mediaDetails {
              height
              width
            }
          }
        }
        id
      }
    }
    `,
    variables: {
      slug: productSlug
    }
  })

  const product = {
    ...response.data.product,
    ...response.data.product.product,
    featuredImage: {
      ...response.data.product.featuredImage.node
    }
  }

  return {
    props: {
      product
    }
  }
}

export async function getStaticPaths() {

  const client = new ApolloClient({
      uri: 'https://guatetiendas.com/graphql',
      cache: new InMemoryCache()
  });

  const response = await client.query({
      query: gql`
          query AllProducts {
              products {
                  edges{
                      node{
                          id
                          slug
                      }
                  }
              }
          }
      `
  })

  const paths = response.data.products.edges.map(({node}) => {
      return {
          params: {
              productSlug: node.slug
          }
      }
  })

  return {
      paths: paths,
      fallback: false
  }
}